# Stage 1
FROM google/cloud-sdk:alpine as get-git-ssh-key

ARG SERVICE_NAME_KMS
ARG PROJECT_ID
ARG JSON_FILE_KEYFILE_KMS

RUN echo "${JSON_FILE_KEYFILE_KMS}" > /root/keyfile-kms.json
RUN gcloud auth activate-service-account \
    ${SERVICE_NAME_KMS}@${PROJECT_ID}.iam.gserviceaccount.com \
    --key-file=/root/keyfile-kms.json --project=${PROJECT_ID}

RUN mkdir /root/.ssh/
ADD ./push-to-build-repo push-to-build-repo
RUN mv /push-to-build-repo/config /root/.ssh/config

RUN gcloud kms decrypt \
    --location=global \
    --keyring=joybrick-wander-around-io-development \
    --key=access-git-key \
    --ciphertext-file=/push-to-build-repo/rayjb_github_rsa.enc \
    --plaintext-file=/root/.ssh/rayjb_github_rsa \
    --verbosity=debug \
    --log-http \
    && gcloud kms decrypt \
    --location=global \
    --keyring=joybrick-wander-around-io-development \
    --key=access-git-key \
    --ciphertext-file=/push-to-build-repo/rayjb_gitlab_rsa.enc \
    --plaintext-file=/root/.ssh/rayjb_gitlab_rsa \
    --verbosity=debug \
    --log-http

# Stage 2
FROM alpine:latest as zip-game-specific-asset

RUN apk update && apk add rsync zip unzip

ADD ../game-specific game-specific

WORKDIR "/game-specific"
RUN zip -r "preprocessed-assets.zip" "preprocessed-assets"
RUN md5=$(md5sum "preprocessed-assets.zip" | cut -d ' ' -f 1) && echo $md5 >> "preprocessed-assets-checksum" && mv "preprocessed-assets.zip" "$md5.zip"

RUN rm -rf preprocessed-assets

# Stage 3

FROM google/cloud-sdk:alpine as upload-game-specific-asset

# May need to use another service account for google storage
ARG SERVICE_NAME_STORAGE
ARG PROJECT_ID
ARG JSON_FILE_KEYFILE_STORAGE
ARG GCS_BUCKET

RUN echo "${JSON_FILE_KEYFILE_STORAGE}" > /root/keyfile-storage.json \
    && gcloud auth activate-service-account \
    ${SERVICE_NAME_STORAGE}@${PROJECT_ID}.iam.gserviceaccount.com \
    --key-file=/root/keyfile-storage.json --project=${PROJECT_ID}

COPY --from=zip-game-specific-asset "/game-specific" "/game-specific"

WORKDIR "/game-specific"
# Add prefix to the file while uploading to Google Storage
RUN md5=$(cat "preprocessed-assets-checksum") \
    && gsutil cp -n "$md5.zip" "gs://${GCS_BUCKET}/preprocessed-assets-$md5.zip" \
    && rm "$md5.zip"

# Stage 4
FROM alpine:latest as fetch-unity-project

ARG COMMIT_MESSAGE

RUN apk update && apk add git git-lfs openssh-client rsync zip unzip

COPY --from=upload-game-specific-asset "/game-specific" "/game-specific"

# RUN mkdir /root/.ssh/
COPY --from=get-git-ssh-key /root/.ssh /root/.ssh
RUN chmod 600 /root/.ssh/rayjb_github_rsa \
    && chmod 600 /root/.ssh/rayjb_gitlab_rsa \
    && chmod 600 /root/.ssh/config \
    && touch /root/.ssh/known_hosts \
    && ssh-keyscan github.com >> /root/.ssh/known_hosts \
    && ssh-keyscan gitlab.com >> /root/.ssh/known_hosts \
    && git clone git@gitlab-rayjb:wander-around-io/game-unity.git

WORKDIR /game-unity
RUN git config --local user.email "ray@joybrick.cc" \
    && git config --local user.name "Ray Wang" \
    && git pull --rebase origin master

# Need to check the correctness once the ssh key is placed into github
# RUN git remote add build git@github-rayjb:Ray-JoyBrick/wander-around-io.git
RUN git remote add build git@github-rayjb:Ray-JoyBrick/wander-around-io-build-release.git

RUN git fetch --all

RUN git rm -r asset-creature-design-unity \
    && git rm -r asset-hud-design-unity \
    && git rm -r asset-level-design-unity \
    && git rm -r asset-unification-unity \
    && git rm -r behavior-unification-unity \
    && git rm -r development-support \
    && git rm -r game-specific/preprocessed-assets \
    && git rm -r prepare-ucb-build-asset \
    && git rm -r push-to-build-repo \
    && git rm cloudbuild-build-asset.yaml \
    && git rm README.md

# RUN if [[ `git status --porcelain` ]]; then \
#       git add . \
#       && git commit -m "${COMMIT_MESSAGE}"; \
#     else \
#       echo "No change"; \
#     fi

RUN git commit -m "${COMMIT_MESSAGE}"
RUN git reset --hard master

RUN git checkout prepare-build-release
RUN git reset --hard master

RUN rsync -avhr --exclude '.gitignore' --exclude '.git' --delete "/game-specific" "/game-unity"

COPY --from=get-git-ssh-key push-to-build-repo/gitignore-prepare-build-release /game-unity/.gitignore
RUN chmod 600 /game-unity/.gitignore

RUN git add . \
    && git commit -m "${COMMIT_MESSAGE}"

# # May just commit without stage and commit
# RUN git push -u build HEAD:prepare-build-release --force
RUN git push build prepare-build-release --force
